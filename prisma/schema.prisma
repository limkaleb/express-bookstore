// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  email          String   @unique
  name           String
  passwordDigest String   @map("password_digest")
  balance        Int
  orders         Order[]
  createdAt      DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt      DateTime @updatedAt @map("updated_at") @db.Timestamptz

  @@map("users")
}

model Book {
  id         Int         @id @default(autoincrement())
  title      String
  coverImage String      @map("cover_image")
  price      Float
  tags       String
  orderItems OrderItem[]
  createdAt  DateTime    @default(now()) @map("created_at") @db.Timestamptz
  updatedAt  DateTime    @updatedAt @map("updated_at") @db.Timestamptz

  @@map("books")
}

model Order {
  id         Int         @id @default(autoincrement())
  user       User        @relation(fields: [userId], references: [id])
  userId     Int         @map("user_id")
  status     String
  orderItems OrderItem[]
  createdAt  DateTime    @default(now()) @map("created_at") @db.Timestamptz
  updatedAt  DateTime    @updatedAt @map("updated_at") @db.Timestamptz

  @@map("orders")
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id])
  book      Book     @relation(fields: [bookId], references: [id])
  orderId   Int      @map("order_id")
  bookId    Int      @map("book_id")
  quantity  Int
  price     Float
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz

  @@map("order_items")
}
